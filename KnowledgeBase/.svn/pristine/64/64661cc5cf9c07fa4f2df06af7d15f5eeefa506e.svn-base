using BoeSj.KnowledgeBase.Application.DTO.Input;
using BoeSj.KnowledgeBase.Application.Interface;
using BoeSj.KnowledgeBase.Domain.Model.Response;
using BoeSj.KnowledgeBase.Domain.Model.Search;
using BoeSj.KnowledgeBase.Repository.Interface;
using KnowledgeBase.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using SSOManagerLib;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Threading.Tasks;

namespace KnowledgeBase.Controllers
{
    public class HomeController : Controller
    {
        private ITestApp _testApp;
        private SSOHelper _ssoHelper;
        IBackgroundTaskQueue _queue;
        ILogger<HomeController> _logger;
        private ISearchApp _search;
        
        public HomeController(ITestApp testApp, SSOHelper sSOHelper, IBackgroundTaskQueue queue, ILogger<HomeController> logger, ISearchApp search)
        {
            _testApp = testApp;
            _ssoHelper = sSOHelper;
            _queue = queue;
            _logger = logger;
            _search = search;
        }

        public IActionResult Index()
        {
            //var ent = new BiAuth_Role { RoleName = "我来测试", RoleType = 100, CheckStatus = 3, CheckNote = "", UseStatus = 1, DataFlag = 0, Created_By = "", Created_By_Id = "", Created_Time = DateTime.Now,
            //    Last_Modify_By = "", Last_Modify_By_Id = "", Last_Modify_Time = DateTime.Now, Guid = "" };
            //_testApp.Save(ent);

            //_queue.QueueBackgroundWorkItem(async token =>
            //{
            //    var guid = Guid.NewGuid().ToString();

            //    for (int delayLoop = 0; delayLoop < 3; delayLoop++)
            //    {
            //        _logger.LogInformation(
            //            $"Queued Background Task {guid} is running. {delayLoop}/3");
            //        await Task.Delay(TimeSpan.FromSeconds(5), token);
            //    }

            //    _logger.LogInformation(
            //        $"Queued Background Task {guid} is complete. 3/3");
            //});

            return View();
        }



        public async Task<IActionResult> Search(SearchInput searchInput)
        {
            Response<List<post>> response = new Response<List<post>>();
            //await _search.SearchPost(searchInput);
            //response =await _search.SearchPostbyField(searchInput);
            return new  JsonResult(response);
        }
        public IActionResult About()
        {
            ViewData["Message"] = "Your application description page.";

            return View();
        }

        public IActionResult Contact()
        {
            ViewData["Message"] = "Your contact page.";

            return View();
        }

        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }

        public IActionResult Forbidden()
        {
            return View();
        }

        [NoAthorize]
        public async Task<IActionResult> Logout(string loginurl)
        {
            var token = HttpContext.Session.GetString("token");
            await _ssoHelper.RemoveToekn(token);
            HttpContext.Session.Clear();
            return Redirect(loginurl);
        }
    }
}