using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using BoeSj.KnowledgeBase.Application.DTO.Input;
using BoeSj.KnowledgeBase.Application.Interface;
using BoeSj.KnowledgeBase.Domain.Model.Response;
using BoeSj.KnowledgeBase.Repository.Interface;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using MongoDB.Bson;
using MongoDB.Driver.GridFS;

namespace BoeSj.KnowledgeBase.Web.Areas.KonwledgeBackend.Controllers
{
    [Area("KonwledgeBackend")]
    public class KnowLedgePublishController : Controller
    {
        private IFieldShareApp _app;
        IMongoRepository _mongoRepository;
        public KnowLedgePublishController(IFieldShareApp app, IMongoRepository mongoRepository)
        {
            _app = app;
            _mongoRepository = mongoRepository;
        }
        public IActionResult Publish()
        {
            return View();
        }

        public async Task<IActionResult> UploadFiles(IFormFile file,string postguid)
        {
            if (file == null || file.Length == 0)
                return Json(new Response<bool> { Data = false, Msg = "未选择文件", Status = 0 });

            var filextention = Path.GetExtension(file.FileName);
            //if (filextention != ".xls" && filextention != ".xlsx")
            //    return Json(new Response<bool> { Data = false, Msg = "请选择Excel文件", Status = 0 });

            //验证文件格式
            GridFSUploadOptions options = new GridFSUploadOptions
            {
                Metadata = new BsonDocument
               {
                   {
                       "PostId",postguid
                   }
               }
            };
            using (var stream = file.OpenReadStream())
            {

                var id =await _mongoRepository.UploadFileAsync(stream, file.FileName, options);
                return Json(new Response<object> { Status = 1, Msg = "", Data = id });
            }

        }


        public async Task<IActionResult> QAUploadFiles(IFormFile file, string postguid)
        {
            if (file == null || file.Length == 0)
                return Json(new Response<bool> { Data = false, Msg = "未选择文件", Status = 0 });

            var filextention = Path.GetExtension(file.FileName);
            //if (filextention != ".xls" && filextention != ".xlsx")
            //    return Json(new Response<bool> { Data = false, Msg = "请选择Excel文件", Status = 0 });

            //验证文件格式
            GridFSUploadOptions options = new GridFSUploadOptions
            {
                Metadata = new BsonDocument
               {
                   {
                       "PostId",postguid
                   }
               }
            };
            using (var stream = file.OpenReadStream())
            {

                var id = await _mongoRepository.UploadFileAsync(stream, file.FileName, options);
                return Json(new Response<object> { Status = 1, Msg = "", Data = id });
            }

        }

        public async Task<IActionResult> MyKnowledgePublish(KnowledegeInput input)
        {
            Response<string> response = new Response<string>();
            response = await _app.MyKnowledgeSharePublish(input);
            return new JsonResult(response);
        }
    }
}