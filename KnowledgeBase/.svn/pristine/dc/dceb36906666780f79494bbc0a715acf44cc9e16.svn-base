using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using BoeSj.KnowledgeBase.Application.Interface;
using BoeSj.KnowledgeBase.Domain.Model.Mongo;
using Microsoft.AspNetCore.Mvc;
using MongoDB.Bson;
using MongoDB.Driver.GridFS;

namespace BoeSj.KnowledgeBase.Web.Areas.KonwledgeBackend.Controllers
{

    [Area("KonwledgeBackend")]
    public class BackendManageController : Controller 
    {
         private IKnowledegeApp _app;
         private IMongoApp _mongo;
        public BackendManageController(IKnowledegeApp app, IMongoApp mongo)
        {
            _app = app;
            _mongo = mongo;
        }

      
        public IActionResult Details(string id )
        {   


            GridFSUploadOptions options = new GridFSUploadOptions
            {  

                

                Metadata = new BsonDocument
                {
                   
                    { "title", "知识分享" },
                    {"tag","mes ,it" },
                    {"category" ,"mes"},
                    {"content","adfdsafddfadfdfafddfdfaadffdfddf" },
                    { "copyrighted", true }
                }
            };
            //_mongo.UploadFileAsync(@"E:\KnowledgeBase\KnowledgeBase\wwwroot\file\test.pptx", "test.pptx", options);
            return View();
        }


        public IActionResult GetPost( string id)
        {   

            return View();
        }
        public async  Task<IActionResult> Publish(string content)
        {

            // 
            Post post = new Post {
                Title = "知识分享",
                Tag= "mes ,it",
                Category= "mes",
                Content=content,
                CreateTime=DateTime.Now

            };
            var result=  _mongo.InsertAsync<Post>(post);
            var id= await _mongo.UploadFileAsync(@"E:\KnowledgeBase\KnowledgeBase\wwwroot\file\mes.pptx", "test.pptx");
            return new JsonResult(null);
        }
     
    }
}