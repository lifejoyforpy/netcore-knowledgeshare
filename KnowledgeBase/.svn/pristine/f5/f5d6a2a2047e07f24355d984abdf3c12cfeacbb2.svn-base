using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using BoeSj.KnowledgeBase.Application.Interface;
using BoeSj.KnowledgeBase.Domain.Model;
using BoeSj.KnowledgeBase.Domain.Model.Mongo;
using BoeSj.KnowledgeBase.Domain.Model.Response;
using Microsoft.AspNetCore.Mvc;
using MongoDB.Bson;
using MongoDB.Driver.GridFS;

namespace BoeSj.KnowledgeBase.Web.Areas.KonwledgeBackend.Controllers
{

    [Area("KonwledgeBackend")]
    public class BackendManageController : Controller 
    {
         private IFieldShareApp _app;
         private IMongoApp _mongo;
        public BackendManageController(IFieldShareApp app, IMongoApp mongo)
        {
            _app = app;
            _mongo = mongo;
        }

       //详情
        public IActionResult Details(string Id )
        {

            Id = "a9f5e372-eb48-4f26-b1f8-bdae87520822";
            ViewData["Id"] = Id;
            return View();
        }


        public async Task<IActionResult> GetKnowledgeShareDetail(string Id)
        {

            Response<KnowledegeShareDetail> response = new Response<KnowledegeShareDetail>();
           
            response= await _app.GetKnowledgeShareDetail(Id);

            return new JsonResult(response);
   
        }
        public async  Task<IActionResult> Publish(string content)
        {

            // 
            try
            {
                FileShare fs = new FileShare
                {
                    Guid = Guid.NewGuid().ToString(),
                    JobNum = "admin",
                    CreateTime = DateTime.Now,
                    Author = "admin"

                };
                Post post = new Post
                {
                    Title = "知识分享",
                    Tag = "mes ,it",
                    Category = "mes",
                    Content = content,
                    CreateTime = DateTime.Now,
                    PostGuid = fs.Guid,
                    Type = 0
                };
                var result = _mongo.InsertAsync<Post>(post);
                GridFSUploadOptions options = new GridFSUploadOptions
                {
                    Metadata = new BsonDocument
               {
                   {
                       "PostId",fs.Guid
                   }
               }
                };
                var id = await _mongo.UploadFileAsync(@"E:\KnowledgeBase\KnowledgeBase\wwwroot\file\mes.pptx", "test.pptx", options);
                await _app.ExcutePost(fs);
            }
            catch (Exception ex)
            {


            }
            return new JsonResult(null);
        }

        //列表

        public IActionResult List(string JobNum)
        {


            return View();
        }
    }
}